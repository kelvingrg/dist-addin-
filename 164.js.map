{"version":3,"file":"164.js","mappings":"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","sources":["webpack://office-addin-taskpane-react-js/./src/taskpane/api/graphQlQuery.js","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/Bom/BomGet/BomGet.css?33c0","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/Bom/BomGet/BomGet.js","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/DropDown/DropDown.css?6280","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/DropDown/DropDown.js","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/ProjectIndicator/ProjectIndicator.css?3499","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/ProjectIndicator/ProjectIndicator.js","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/Bom/BomGet/BomGet.css","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/DropDown/DropDown.css","webpack://office-addin-taskpane-react-js/./src/taskpane/commonComponents/ProjectIndicator/ProjectIndicator.css"],"sourcesContent":["export const GetAllBomListByProductCodeQuery = `query GetAllBomListByProductCodeQuery($product_code: Int!) {\r\n    core_bom(where: {product_code: {_eq: $product_code}}) {\r\n      id\r\n      name\r\n    }\r\n}\r\n`;\r\n\r\nexport const allBomAssociatedwithATenant = `query allBomAssociatedwithATenant {\r\n  core_bom {\r\n    id\r\n    name\r\n  }\r\n}`;\r\n\r\nexport const GetBomdetailsByBomId = `query GetBomdetailsByBomId($bom_id: Int!, $active: Boolean!) {\r\n  bom_items(\r\n    where: {bom_id: {_eq: $bom_id}, bom_version: {active: {_eq: $active}}}\r\n  ) {\r\n    bom_id\r\n    bom_version_id\r\n    material_id\r\n    quantity\r\n    total_price\r\n    unit_size\r\n    associated_product_code_bom\r\n    associated_bom_version {\r\n      version_no\r\n      id\r\n      active\r\n      core_bom {\r\n        id\r\n        name\r\n      }\r\n    }\r\n    core_material {\r\n      custom_material_id\r\n      erp_material_id\r\n      gross_weight\r\n      id\r\n      inventory\r\n      lead_time\r\n      material_description\r\n      material_group\r\n      material_name\r\n      material_type\r\n      parent_id\r\n      plm_material_id\r\n      plm_record_id\r\n      product_code\r\n      quantity\r\n      status\r\n      storage_loc\r\n      unit_cost\r\n      unit_of_material\r\n      unit_sale_price\r\n      weight_unit\r\n      material_product_code {\r\n        id\r\n        product_code\r\n      }\r\n    }\r\n    core_bom {\r\n      state         \r\n      tenant_id\r\n    }\r\n  }\r\n}\r\n  `;\r\n\r\n// export const GetAllBomItemsByBomVersionIdQuery = `query GetAllBomItemsByBomVersionIdQuery($bom_version: Int) {\r\n//     bom_items(where: {bom_version_id: {_eq: $bom_version}}) {\r\n//       associated_product_code_bom\r\n//       associated_bom_version {\r\n//         version_no\r\n//         id\r\n//         active\r\n//         core_bom {\r\n//           id\r\n//           name\r\n//         }\r\n//       }\r\n//       bom_id\r\n//       bom_version_id\r\n//       material_id\r\n//       quantity\r\n//       total_price\r\n//       unit_size\r\n//       core_material {\r\n//         custom_material_id\r\n//           erp_material_id\r\n//           blob_reference_key\r\n//           id\r\n//           gross_weight\r\n//           inventory\r\n//           lead_time\r\n//           material_description\r\n//           material_group\r\n//           material_name\r\n//           material_type\r\n//           others\r\n//           parent_id\r\n//           plm_material_id\r\n//           plm_record_id\r\n//           quantity\r\n//           status\r\n//           storage_loc\r\n//           unit_cost\r\n//           unit_of_material\r\n//           unit_sale_price\r\n//           weight_unit\r\n//           product_code\r\n//           material_product_code {\r\n//             id\r\n//             product_code\r\n//           }\r\n//       }\r\n//     }\r\n//   }`;\r\n\r\n// export const GetBomForCopyAndInheritQuery = () => GQL`query MyQuery($id: Int!) {\r\n//     core_bom_by_pk(id: $id) {\r\n//       name\r\n//       product_code\r\n//       bom_versions(where: {active: {_eq: true}}) {\r\n//         id\r\n//         bom_items {\r\n//           material_id\r\n//           quantity\r\n//           total_price\r\n//           unit_size\r\n//           associated_product_code_bom\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n//   `;\r\n\r\n// Project Bom\r\n\r\n// export const CreateProjectBomQuery = () => `mutation CreateProjectBomQuery(\r\n//     $name: String!,\r\n//     $items: [bomItemsArray],\r\n//     $inherited_from_bom_id: Int,\r\n//     $inherited_from_bom_version_id: Int\r\n//     ) {\r\n//     insert_bom(\r\n//       inherited_from_bom_id: $inherited_from_bom_id,\r\n//       inherited_from_bom_version_id: $inherited_from_bom_version_id,\r\n//       bom_data: {\r\n//         items: $items,\r\n//         name: $name,\r\n//       }) {\r\n//       message\r\n//     }\r\n//   }`;\r\nexport const GetMaterialMasterDataQuery = `query GetMaterialMasterDataQuery(\r\n    $jump: Int,\r\n    $perPage: Int,\r\n    $searchKeyword: String\r\n    ) {\r\n    core_material_master_aggregate(where: {_or: [\r\n      {custom_material_id: {_ilike: $searchKeyword}},\r\n      {erp_material_id: {_ilike: $searchKeyword}},\r\n      {material_description: {_ilike: $searchKeyword}},\r\n      {material_name: {_ilike: $searchKeyword}},\r\n      {material_type: {_ilike: $searchKeyword}},\r\n      {plm_material_id: {_ilike: $searchKeyword}},\r\n      {unit_of_material: {_ilike: $searchKeyword}},\r\n      {material_product_code: {\r\n        product_code: {_ilike: $searchKeyword}}\r\n      }\r\n    ]}){\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n    core_material_master(\r\n      where: {_or: [\r\n        {custom_material_id: {_ilike: $searchKeyword}},\r\n        {erp_material_id: {_ilike: $searchKeyword}},\r\n        {material_description: {_ilike: $searchKeyword}},\r\n        {material_name: {_ilike: $searchKeyword}},\r\n        {material_type: {_ilike: $searchKeyword}},\r\n        {plm_material_id: {_ilike: $searchKeyword}},\r\n        {unit_of_material: {_ilike: $searchKeyword}},\r\n        {material_product_code: {\r\n          product_code: {_ilike: $searchKeyword}}\r\n        }\r\n      ]}\r\n      limit: $perPage\r\n      offset: $jump\r\n    ) {\r\n      custom_material_id\r\n      erp_material_id\r\n      blob_reference_key\r\n      id\r\n      gross_weight\r\n      inventory\r\n      lead_time\r\n      material_description\r\n      material_group\r\n      material_name\r\n      material_type\r\n      others\r\n      parent_id\r\n      plm_material_id\r\n      plm_record_id\r\n      quantity\r\n      status\r\n      storage_loc\r\n      unit_cost\r\n      unit_of_material\r\n      unit_sale_price\r\n      weight_unit\r\n      product_code\r\n      material_product_code {\r\n        id\r\n        product_code\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\nexport const GetAllProductCodes = \"query GetAllProductCodes {\\n  product_code {\\n    id\\n    product_code\\n  }\\n}\\n\";\r\n\r\nexport const GetAllBomListByProductCodeActive = `query GetAllBomListByProductCodeActive($product_code: Int!) {\r\n  core_bom(where: {product_code: {_eq: $product_code}}) {\r\n    id\r\n    name\r\n    bom_versions(where: {active: {_eq: true}}) {\r\n      id\r\n      version_no\r\n      active\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const GetAllBomItemsByBomVersionIdQuery = `query GetAllBomItemsByBomVersionIdQuery($bom_version: Int) {\r\n  bom_items(where: {bom_version_id: {_eq: $bom_version}}) {\r\n    associated_product_code_bom\r\n    associated_bom_version {\r\n      version_no\r\n      id\r\n      active\r\n      core_bom {\r\n        id\r\n        name\r\n      }\r\n    }\r\n    material_id\r\n    quantity\r\n    total_price\r\n    unit_size\r\n    core_material {\r\n      custom_material_id\r\n        erp_material_id\r\n        blob_reference_key\r\n        id\r\n        gross_weight\r\n        inventory\r\n        lead_time\r\n        material_description\r\n        material_group\r\n        material_name\r\n        material_type\r\n        others\r\n        parent_id\r\n        plm_material_id\r\n        plm_record_id\r\n        quantity\r\n        status\r\n        storage_loc\r\n        unit_cost\r\n        unit_of_material\r\n        unit_sale_price\r\n        weight_unit\r\n        product_code\r\n        material_product_code {\r\n          id\r\n          product_code\r\n        }\r\n       \r\n    }\r\n    core_bom {\r\n      name\r\n      id\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const GetAllProjectBomListQuery = `query GetAllProjectBomListQuery($projectId: Int!)  {\r\n  core_bom(where: {project_id: {_eq: $projectId}}) {\r\n    id\r\n    name\r\n    bom_versions(where: {active: {_eq: true}}) {\r\n      id\r\n      version_no\r\n      active\r\n    }\r\n    project_id\r\n  }\r\n}`;\r\n\r\nexport const getParentTags = `query getParentTags($value: String!) {\r\n  tag(where: {name: {_iregex: $value}, parent_id: {_is_null: true}}) {\r\n    parent_id\r\n    name\r\n    id\r\n  }\r\n}`;\r\nexport const getChildrenTagsQuery = `query getChildrenTagsQuery($value:String!,$parent_id:Int){\r\n  tag(where: {name: {_iregex: $value}, parent_id: {_eq: $parent_id}}) {\r\n     parent_id\r\n     name\r\n     id\r\n   }\r\n }`;\r\nexport const GetMaterialMasterForBomQueryWithTagFilters = `query GetMaterialMasterForBomQueryWithTagFilters(\r\n  $jump: Int,\r\n  $perPage: Int,\r\n  $searchKeyword: String,\r\n  $materialIds:[Int!]\r\n  ) {\r\n  core_material_master_aggregate(where:{_and:[\r\n    {_or: [\r\n    {custom_material_id: {_ilike: $searchKeyword}},\r\n    {erp_material_id: {_ilike: $searchKeyword}},\r\n    {material_description: {_ilike: $searchKeyword}},\r\n    {material_name: {_ilike: $searchKeyword}},\r\n    {material_type: {_ilike: $searchKeyword}},\r\n    {plm_material_id: {_ilike: $searchKeyword}},\r\n    {unit_of_material: {_ilike: $searchKeyword}},\r\n    {material_product_code: {\r\n      product_code: {_ilike: $searchKeyword}}\r\n    }]},\r\n    {id: {\r\n      _in: $materialIds\r\n    }}\r\n  ]}){\r\n    aggregate {\r\n      count\r\n    }\r\n  }\r\n  core_material_master(\r\n    where:{_and:[\r\n    {_or: [\r\n    {custom_material_id: {_ilike: $searchKeyword}},\r\n    {erp_material_id: {_ilike: $searchKeyword}},\r\n    {material_description: {_ilike: $searchKeyword}},\r\n    {material_name: {_ilike: $searchKeyword}},\r\n    {material_type: {_ilike: $searchKeyword}},\r\n    {plm_material_id: {_ilike: $searchKeyword}},\r\n    {unit_of_material: {_ilike: $searchKeyword}},\r\n    {material_product_code: {\r\n      product_code: {_ilike: $searchKeyword}}\r\n    }]},\r\n    {id: {\r\n      _in: $materialIds\r\n    }}\r\n  ]}\r\n    limit: $perPage\r\n    offset: $jump\r\n  ) {\r\n    custom_material_id\r\n    erp_material_id\r\n    id\r\n    lead_time\r\n    material_description\r\n    material_name\r\n    material_type\r\n    plm_material_id\r\n    unit_of_material\r\n    product_code\r\n    material_product_code {\r\n      id\r\n      product_code\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const getMaterialTags = `query getMaterialTags(\r\n  $tags:[Int!]!\r\n){\r\n  tag_material(where: {tag_id: {_in: $tags}}) {\r\n    material_id\r\n  }\r\n}\r\n`;\r\nexport const GetAllFormTypeListQuery = `query GetAllFormTypeListQuery {\r\n  core_form_types {\r\n    enabled\r\n    id\r\n    name\r\n  }\r\n}`;\r\nexport const GetDetailFormTemplateQuery = `query GetDetailFormTemplateQuery($id: Int!) {\r\n  core_form_templates_by_pk(id: $id) {\r\n    name\r\n    id\r\n    core_form_type {\r\n      name\r\n    }\r\n    template_versions(where: {active: {_eq: true}}) {\r\n      active\r\n      version_id\r\n      id\r\n      template_fields {\r\n        autogenerated\r\n        caption\r\n        custom_list_id\r\n        field_id\r\n        field_name\r\n        field_type_id\r\n        fixed\r\n        required\r\n        template_version_id\r\n        form_field {\r\n          key\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const GetAllFormTemplatesQuery = `query GetAllFormTemplatesQuery{\r\n  core_form_templates {\r\n    name\r\n    id\r\n    core_form_type {\r\n      name\r\n    }\r\n    template_versions(where: {active: {_eq: true}}) {\r\n      active\r\n      version_id\r\n    }\r\n  }\r\n}`;\r\nexport const GetBomMaterialMappingConfigQuery = `query GetBomMaterialMappingConfigQuery($tenant_id: Int!) {\r\n  tenant_defaults(where: {tenant_id: {_eq: $tenant_id}}) {\r\n    bom\r\n    material\r\n  }\r\n}`;\r\n\r\nexport const GetBomCurrentStateQuery = `query GetBomCurrentStateQuery($bom_id: Int!) {\r\n  core_bom(where: {id: {_eq: $bom_id}}) {\r\n    state\r\n    name\r\n    checked_out_by\r\n  }\r\n}`;\r\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./BomGet.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./BomGet.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DTX_GRAPHQL_URL } from \"../../../../config\";\r\nimport Button from \"../../Button/Button\";\r\nimport \"./BomGet.css\";\r\nimport {\r\n  GetAllBomListByProductCodeQuery,\r\n  GetAllProjectBomListQuery,\r\n  GetBomdetailsByBomId,\r\n} from \"../../../api/graphQlQuery\";\r\nimport {\r\n  changeActiveSheetName,\r\n  clearsheet,\r\n  hideColumn,\r\n  setCustomPropertyData,\r\n  writeToExcelforBOM,\r\n} from \"../../../constFunctions/excelFunction\";\r\nimport { HIDE_COLUMNS, JWT_ERROR_MESSAGE } from \"../../../constFunctions/constants\";\r\nimport { setNextPage } from \"../../../redux-toolkit/slice/TaskpaneSlice\";\r\nimport { logout } from \"../../../constFunctions/copmponentFunctions\";\r\nimport { runQuery } from \"../../../api/apiCalls\";\r\nimport { setUploadLoader } from \"../../../redux-toolkit/slice/action\";\r\nimport DropDown from \"../../DropDown/DropDown\";\r\nimport ProjectIndicator from \"../../ProjectIndicator/ProjectIndicator\";\r\nconst AddNewMaterail = React.lazy(() => import(\"../AddNewMaterail/AddNewMaterail\"));\r\n\r\nfunction BomGet() {\r\n  const dispatch = useDispatch();\r\n  const { bomMappingData, activeProject } = useSelector((state) => state.taskpane);\r\n  const { activeSheetId } = useSelector((state) => state.action);\r\n  const [productCodes, setProductCodes] = useState([]);\r\n  const [selectedProdCode, setSelectedProdCode] = useState();\r\n  const [allBomdetails, setAllBomDetails] = useState([]);\r\n  const [selectedBom, setSelectdBom] = useState();\r\n  const [coreMaterialsBom, setCoreMaterailBom] = useState([]);\r\n  const [addNewBomMaterial, setAddNewBomMaterial] = useState(false);\r\n  const [prodCodeLoading, setProdCodeLoading] = useState(false);\r\n  const [bomLoading, setBomLoading] = useState(false);\r\nconsole.log(bomMappingData,\"bomMappingData\");\r\n  useEffect(() => {\r\n    if (activeProject?.id === \"Master\") {\r\n      setProdCodeLoading(true);\r\n      try {\r\n        const body = {\r\n          operationName: \"MyQuery\",\r\n          query: \"query MyQuery {\\n  product_code {\\n    id\\n    product_code\\n  }\\n}\\n\",\r\n          variables: null,\r\n        };\r\n        runQuery(DTX_GRAPHQL_URL, localStorage.getItem(\"tenantToken\"), body)\r\n          .then((data) => {\r\n            if (data.errors) {\r\n              data.errors.map((element) => {\r\n                if (element?.message.includes(JWT_ERROR_MESSAGE)) {\r\n                  logout();\r\n                  dispatch(setNextPage(\"homeLogin\"));\r\n                }\r\n              });\r\n            } else {\r\n              for (let i = 0; i < data?.data?.product_code?.length; i++) {\r\n                setProductCodes((preState) => [\r\n                  ...preState,\r\n                  { label: data?.data?.product_code[i]?.product_code, value: data?.data?.product_code[i]?.id },\r\n                ]);\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.message, \"error.message\");\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setProdCodeLoading(false);\r\n      }\r\n    } else {\r\n      try {\r\n        const body = {\r\n          operationName: \"GetAllProjectBomListQuery\",\r\n          query: GetAllProjectBomListQuery,\r\n          variables: { projectId: activeProject?.id },\r\n        };\r\n        runQuery(DTX_GRAPHQL_URL, localStorage.getItem(\"projectExchangeToken\"), body)\r\n          .then((data) => {\r\n            if (data.errors) {\r\n              data.errors.map((element) => {\r\n                if (element?.message.includes(JWT_ERROR_MESSAGE)) {\r\n                  logout();\r\n                  dispatch(setNextPage(\"homeLogin\"));\r\n                }\r\n              });\r\n            } else {\r\n              for (let i = 0; i < data?.data?.core_bom?.length; i++) {\r\n                setAllBomDetails((prevState) => [\r\n                  ...prevState,\r\n                  { label: data?.data?.core_bom[i]?.name, value: data?.data?.core_bom[i]?.id },\r\n                ]);\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.message, \"error.message\");\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n      }\r\n    }\r\n  }, [true]);\r\n  useEffect(() => {\r\n    document.getElementById(\"mappingWarning\").style.display = \"none\";\r\n  }, []);\r\n  // when product code selection changes this fuction fecth bom associated with given selelctd producted code\r\n  const handleProdCodeChange = (selectedProdCode) => {\r\n    // for loader in drop down\r\n    setBomLoading(true);\r\n    setAllBomDetails([]);\r\n    setSelectdBom(null);\r\n    setSelectedProdCode(selectedProdCode);\r\n    const token = localStorage.getItem(\"tenantToken\");\r\n    try {\r\n      const body = {\r\n        operationName: \"GetAllBomListByProductCodeQuery\",\r\n        query: GetAllBomListByProductCodeQuery,\r\n        variables: { product_code: parseInt(selectedProdCode?.value) },\r\n      };\r\n      fetch(DTX_GRAPHQL_URL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.errors) {\r\n            data.errors.map((element) => {\r\n              if (element?.message.includes(JWT_ERROR_MESSAGE)) {\r\n                logout();\r\n                dispatch(setNextPage(\"homeLogin\"));\r\n              }\r\n            });\r\n          } else {\r\n            for (let i = 0; i < data?.data?.core_bom?.length; i++) {\r\n              setAllBomDetails((prevState) => [\r\n                ...prevState,\r\n                { label: data?.data?.core_bom[i]?.name, value: data?.data?.core_bom[i]?.id },\r\n              ]);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setBomLoading(false);\r\n    }\r\n  };\r\n\r\n  const getSelectedBomDetails = (selectedBom) => {\r\n    setSelectdBom(selectedBom);\r\n  };\r\n  // get fulll details of selected bom\r\n  const importBomMaterial = async () => {\r\n    // checks mandatory fields are there or not\r\n    if (\r\n      bomMappingData.quantity &&\r\n      bomMappingData.total_price &&\r\n      bomMappingData.unit_size &&\r\n      bomMappingData.id &&\r\n      bomMappingData?.custom_material_id &&\r\n      bomMappingData?.associated_product_code_bom\r\n    ) {\r\n      dispatch(setUploadLoader(true));\r\n      const token = localStorage.getItem(\"tenantToken\");\r\n      try {\r\n        const body = {\r\n          operationName: \"GetBomdetailsByBomId\",\r\n          query: GetBomdetailsByBomId,\r\n          variables: {\r\n            bom_id: selectedBom?.value,\r\n            active: true,\r\n          },\r\n        };\r\n        runQuery(DTX_GRAPHQL_URL, token, body)\r\n          .then(async (data) => {\r\n            if (data?.errors) {\r\n              data.errors.map((element) => {\r\n                if (element?.message.includes(JWT_ERROR_MESSAGE)) {\r\n                  logout();\r\n                  dispatch(setNextPage(\"homeLogin\"));\r\n                  dispatch(setUploadLoader(false));\r\n                }\r\n              });\r\n            } else {\r\n              setCoreMaterailBom(data?.data?.bom_items);\r\n              // to get currently active sheet name\r\n              const sheetname = await changeActiveSheetName(\r\n                selectedBom?.label,\r\n                data?.data?.bom_items[0]?.bom_version_id\r\n              );\r\n              clearsheet(sheetname); // to clear existing data from given sheet\r\n\r\n              setCustomPropertyData(activeSheetId, {\r\n                bomVersionId: data?.data?.bom_items[0]?.bom_version_id,\r\n                productCodeId: selectedProdCode?.value,\r\n                productCodeLabel: selectedProdCode?.label,\r\n                bomId: selectedBom?.value,\r\n                bomLabel: selectedBom?.label,\r\n              });\r\n              Object.entries(bomMappingData).map(([key, value], index) => {\r\n                writeHeadings(index, key);\r\n              });\r\n              for (let i = 0; i < data?.data?.bom_items?.length; i++) {\r\n                writeToExcelforBOM(sheetname, i, data?.data?.bom_items[i], bomMappingData);\r\n              }\r\n              // to hide unwanted columns\r\n              HIDE_COLUMNS?.forEach(async (element) => {\r\n                if (bomMappingData[element]) {\r\n                  await hideColumn(bomMappingData[element].address);\r\n                }\r\n              });\r\n              dispatch(setUploadLoader(false));\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"someThing went wrong\");\r\n            dispatch(setUploadLoader(false));\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n        dispatch(setUploadLoader(false));\r\n      } finally {\r\n        dispatch(setUploadLoader(false));\r\n      }\r\n    } else {\r\n      document.getElementById(\"mappingWarning\").style.display = \"block\";\r\n    }\r\n  };\r\n  // write the headins of given imported data of bom\r\n  const writeHeadings = async (i, key) => {\r\n    await Excel.run((context) => {\r\n      const sheet = context.workbook.worksheets.getActiveWorksheet().getRange(String(bomMappingData[key]?.address + 1));\r\n      sheet.values = [[bomMappingData[key]?.name]];\r\n      sheet.format.fill.color = \"#FFC467\";\r\n      sheet.format.autofitColumns();\r\n      return context.sync();\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\" bom-import-container\">\r\n        <ProjectIndicator />\r\n        {activeProject?.id === \"Master\" && (\r\n          <div>\r\n            <DropDown\r\n              options={productCodes}\r\n              handleChange={handleProdCodeChange}\r\n              value={selectedProdCode}\r\n              label={\"Selelct the Product Code\"}\r\n              noOptionMessage={\"No Product Codes availble\"}\r\n              prodCodeLoading={prodCodeLoading}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {\r\n          <div>\r\n            <DropDown\r\n              options={allBomdetails}\r\n              handleChange={getSelectedBomDetails}\r\n              value={selectedBom}\r\n              label={\"Selelct the Bill of Material\"}\r\n              noOptionMessage={\"No  Bom data availble\"}\r\n              isLoading={bomLoading}\r\n            />\r\n          </div>\r\n        }\r\n        <div className=\"bom-get-btn-container\">\r\n          <span className=\"bom-import-button\" onClick={selectedBom && importBomMaterial}>\r\n            <Button label={\"Import\"} />\r\n          </span>\r\n\r\n          <span className=\"bom-addnewmaterial\" onClick={() => setAddNewBomMaterial(true)}>\r\n            <Button label={\"Add Material\"} />\r\n          </span>\r\n        </div>\r\n        {addNewBomMaterial && (\r\n          <Suspense fallback={<div></div>}>\r\n            {\" \"}\r\n            <AddNewMaterail setAddNewBomMaterial={setAddNewBomMaterial} />\r\n          </Suspense>\r\n        )}\r\n\r\n        <ul className=\"mappingWarning\" id=\"mappingWarning\">\r\n          {!bomMappingData?.id && <li>ID</li>}\r\n          {!bomMappingData?.unit_size && <li>Unit Size (BOM)</li>}\r\n          {!bomMappingData?.quantity && <li>Quantity (BOM)</li>}\r\n          {!bomMappingData?.total_price && <li>Total Price (BOM)</li>}\r\n          {!bomMappingData?.custom_material_id && <li>Material Id</li>}\r\n          {!bomMappingData?.associated_product_code_bom && <li>Associated Product code (BOM)</li>}\r\n          <li>you have to map given mandatory field(s)</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BomGet;\r\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./DropDown.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./DropDown.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { customStyles } from \"../../constFunctions/copmponentFunctions\";\r\nimport Select, { components } from \"react-select\";\r\nimport \"./DropDown.css\";\r\n\r\nfunction DropDown({ options, handleChange, value, label, noOptionMessage = \"No option available\", isLoading = true }) {\r\n  const { sideBarOpen, uploadLoader } = useSelector((state) => state.action);\r\n\r\n  const filteredOptions = options?.filter((option, index, self) => {\r\n    return index === self?.findIndex((o) => o?.label === option?.label);\r\n  });\r\n  const NoOptionsMessage = (props) => {\r\n    return (\r\n      <components.NoOptionsMessage {...props}>\r\n        <span className=\"custom-css-class\">{noOptionMessage}</span>\r\n      </components.NoOptionsMessage>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"react-select-dd\">\r\n      {label && <p>{label}</p>}\r\n      <Select\r\n        options={filteredOptions}\r\n        components={{ NoOptionsMessage }}\r\n        styles={customStyles}\r\n        onChange={handleChange}\r\n        value={value}\r\n        className={`${sideBarOpen ? \"selectType\" : \" \"}`}\r\n        isDisabled={uploadLoader ? true : false}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDown;\r\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./ProjectIndicator.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./ProjectIndicator.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\nimport \"./ProjectIndicator.css\";\nimport { useSelector } from \"react-redux\";\n\nfunction ProjectIndicator() {\n  const { activeProject } = useSelector((state) => state.taskpane);\n\n  return (\n    <div className=\"projectIndicator-box\">\n      <span>...</span> <span>{activeProject?.name}</span>\n    </div>\n  );\n}\n\nexport default ProjectIndicator;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n.bom-get-btn-container{\\r\\ndisplay: flex;\\r\\nmargin-top: 20px;\\r\\ngap: 10px;\\r\\n}\\r\\n.bom-import-container{\\r\\n    display: flex;\\r\\n   align-items: center;\\r\\n    flex-direction: column;\\r\\n    height: -webkit-fill-available;\\r\\n}\\r\\n.mappingWarning li{\\r\\n    color: red;\\r\\n    font-size: x-small;\\r\\n}\\r\\n.mappingWarning li:last-child{\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.mappingWarning{\\r\\ndisplay: none;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/commonComponents/Bom/BomGet/BomGet.css\"],\"names\":[],\"mappings\":\";AACA;AACA,aAAa;AACb,gBAAgB;AAChB,SAAS;AACT;AACA;IACI,aAAa;GACd,mBAAmB;IAClB,sBAAsB;IACtB,8BAA8B;AAClC;AACA;IACI,UAAU;IACV,kBAAkB;AACtB;AACA;IACI,gBAAgB;AACpB;;AAEA;AACA,aAAa;AACb\",\"sourcesContent\":[\"\\r\\n.bom-get-btn-container{\\r\\ndisplay: flex;\\r\\nmargin-top: 20px;\\r\\ngap: 10px;\\r\\n}\\r\\n.bom-import-container{\\r\\n    display: flex;\\r\\n   align-items: center;\\r\\n    flex-direction: column;\\r\\n    height: -webkit-fill-available;\\r\\n}\\r\\n.mappingWarning li{\\r\\n    color: red;\\r\\n    font-size: x-small;\\r\\n}\\r\\n.mappingWarning li:last-child{\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.mappingWarning{\\r\\ndisplay: none;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".react-select-dd p{\\r\\n    margin:10px 0px 5px 0px\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/commonComponents/DropDown/DropDown.css\"],\"names\":[],\"mappings\":\"AAAA;IACI;AACJ\",\"sourcesContent\":[\".react-select-dd p{\\r\\n    margin:10px 0px 5px 0px\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".projectIndicator-box{\\r\\n    margin: 0;\\r\\n    padding:0;\\r\\n    padding: .08rem;\\r\\n    width: -webkit-fill-available;\\r\\n    display: grid;\\r\\ngrid-template-columns: 1fr 1fr;\\r\\npadding-right:.2rem;\\r\\ngrid-gap: 1px;\\r\\n}\\r\\n.projectIndicator-box span {\\r\\ntext-align: center;\\r\\nbackground-color: rgba(255, 196, 103, .6);\\r\\nwidth: 100%;\\r\\nheight: 100%;\\r\\nfont-size: x-small;\\r\\n\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/commonComponents/ProjectIndicator/ProjectIndicator.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,SAAS;IACT,SAAS;IACT,eAAe;IACf,6BAA6B;IAC7B,aAAa;AACjB,8BAA8B;AAC9B,mBAAmB;AACnB,aAAa;AACb;AACA;AACA,kBAAkB;AAClB,yCAAyC;AACzC,WAAW;AACX,YAAY;AACZ,kBAAkB;;AAElB\",\"sourcesContent\":[\".projectIndicator-box{\\r\\n    margin: 0;\\r\\n    padding:0;\\r\\n    padding: .08rem;\\r\\n    width: -webkit-fill-available;\\r\\n    display: grid;\\r\\ngrid-template-columns: 1fr 1fr;\\r\\npadding-right:.2rem;\\r\\ngrid-gap: 1px;\\r\\n}\\r\\n.projectIndicator-box span {\\r\\ntext-align: center;\\r\\nbackground-color: rgba(255, 196, 103, .6);\\r\\nwidth: 100%;\\r\\nheight: 100%;\\r\\nfont-size: x-small;\\r\\n\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["GetAllBomListByProductCodeQuery","allBomAssociatedwithATenant","GetBomdetailsByBomId","GetMaterialMasterDataQuery","GetAllProductCodes","GetAllBomListByProductCodeActive","GetAllBomItemsByBomVersionIdQuery","GetAllProjectBomListQuery","getParentTags","getChildrenTagsQuery","GetMaterialMasterForBomQueryWithTagFilters","getMaterialTags","GetDetailFormTemplateQuery","GetAllFormTemplatesQuery","GetBomMaterialMappingConfigQuery","GetBomCurrentStateQuery","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_slicedToArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","test","len","arr2","AddNewMaterail","React","dispatch","useDispatch","_useSelector","useSelector","taskpane","bomMappingData","activeProject","activeSheetId","action","_useState2","useState","productCodes","setProductCodes","_useState4","selectedProdCode","setSelectedProdCode","_useState6","allBomdetails","setAllBomDetails","_useState8","selectedBom","setSelectdBom","_useState10","setCoreMaterailBom","_useState12","addNewBomMaterial","setAddNewBomMaterial","_useState14","prodCodeLoading","setProdCodeLoading","_useState16","bomLoading","setBomLoading","console","log","useEffect","id","runQuery","DTX_GRAPHQL_URL","localStorage","getItem","operationName","query","variables","data","errors","map","element","message","includes","JWT_ERROR_MESSAGE","logout","setNextPage","_loop","preState","_data$data2","_data$data2$product_c","_data$data3","_data$data3$product_c","concat","label","product_code","_data$data","_data$data$product_co","body","projectId","_loop2","prevState","_data$data5","_data$data5$core_bom$","_data$data6","_data$data6$core_bom$","core_bom","_data$data4","_data$data4$core_bom","document","getElementById","style","display","importBomMaterial","_ref","_callee3","token","_context3","quantity","total_price","unit_size","custom_material_id","associated_product_code_bom","setUploadLoader","bom_id","active","_ref2","_callee2","_data$data10","_data$data11","_data$data11$bom_item","_data$data12","_data$data12$bom_item","sheetname","_data$data13","_data$data13$bom_item","_data$data14","_context2","bom_items","changeActiveSheetName","bom_version_id","clearsheet","setCustomPropertyData","bomVersionId","productCodeId","productCodeLabel","bomId","bomLabel","entries","_ref3","index","_ref4","writeHeadings","writeToExcelforBOM","HIDE_COLUMNS","_ref5","_callee","_context","hideColumn","address","_x3","_x2","_ref6","_callee4","_context4","Excel","run","_bomMappingData$key","_bomMappingData$key2","sheet","workbook","worksheets","getActiveWorksheet","getRange","String","format","fill","color","autofitColumns","sync","_x4","_x5","className","ProjectIndicator","DropDown","handleChange","parseInt","fetch","headers","Authorization","JSON","stringify","response","json","_loop3","_data$data8","_data$data8$core_bom$","_data$data9","_data$data9$core_bom$","_data$data7","_data$data7$core_bom","noOptionMessage","isLoading","onClick","Button","Suspense","fallback","_ref$noOptionMessage","_ref$isLoading","sideBarOpen","uploadLoader","filteredOptions","filter","option","findIndex","Select","components","NoOptionsMessage","props","styles","customStyles","onChange","isDisabled","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}